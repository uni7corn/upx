
Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

TARGET(elf32-i386)
                0x0000000000000074                . = SIZEOF_HEADERS

.data           0x0000000000000074      0x388
 *(.text)
 .text          0x0000000000000074       0x1c tmp/i386-bsd.elf.execve-fold.o
 .text          0x0000000000000090      0x2d5 tmp/i386-bsd.elf.execve-main.o
                0x000000000000014b                upx_main
 *fill*         0x0000000000000365        0x3 00
 .text          0x0000000000000368       0x6d tmp/i386-bsd.syscall.o
                0x00000000000003d1                waitpid
                0x00000000000003a5                munmap
                0x00000000000003b9                execve
                0x00000000000003b1                getpid
                0x00000000000003c1                ftruncate
                0x0000000000000368                mmap
                0x00000000000003c9                nanosleep
                0x0000000000000399                write
                0x0000000000000395                read
                0x00000000000003cd                unlink
                0x00000000000003bd                fork
                0x00000000000003c5                gettimeofday
                0x00000000000003ad                access
                0x000000000000038d                exit
                0x000000000000038c                brk
                0x000000000000039d                open
                0x00000000000003a9                mprotect
                0x00000000000003b5                fcntl
                0x00000000000003a1                close
 *fill*         0x00000000000003d5        0x3 00
 .text          0x00000000000003d8       0x23 tmp/i386-linux.elf.execve-upx_itoa.o
                0x00000000000003d8                upx_itoa
 *(.rodata)
 *(.data)
 *fill*         0x00000000000003fb        0x1 00
 .data          0x00000000000003fc        0x0 tmp/i386-bsd.elf.execve-fold.o
 .data          0x00000000000003fc        0x0 tmp/i386-bsd.elf.execve-main.o
 .data          0x00000000000003fc        0x0 tmp/i386-bsd.syscall.o
 .data          0x00000000000003fc        0x0 tmp/i386-linux.elf.execve-upx_itoa.o
 *(.bss)
 .bss           0x00000000000003fc        0x0 tmp/i386-bsd.elf.execve-fold.o
 .bss           0x00000000000003fc        0x0 tmp/i386-bsd.elf.execve-main.o
 .bss           0x00000000000003fc        0x0 tmp/i386-bsd.syscall.o
 .bss           0x00000000000003fc        0x0 tmp/i386-linux.elf.execve-upx_itoa.o
 *(COMMON)

.rel.dyn        0x00000000000003fc        0x0
 .rel.text      0x0000000000000000        0x0 tmp/i386-bsd.elf.execve-fold.o
LOAD tmp/i386-bsd.elf.execve-fold.o
LOAD tmp/i386-bsd.elf.execve-main.o
LOAD tmp/i386-bsd.syscall.o
LOAD tmp/i386-linux.elf.execve-upx_itoa.o
OUTPUT(tmp/i386-bsd.elf.execve-fold.bin elf32-i386)
